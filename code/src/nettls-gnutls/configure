#! /bin/sh

# Env:
# GNUTLS_CFLAGS
# GNUTLS_LIBS
# PKG_CONFIG

have_gnutls=0

if [ -z "$PKG_CONFIG" ]; then
    PKG_CONFIG="pkg-config"
fi

if [ -z "$GNUTLS_LIBS" ]; then
   GNUTLS_CFLAGS=`$PKG_CONFIG --cflags gnutls`
   GNUTLS_LIBS=`$PKG_CONFIG --libs gnutls`
fi


stdlib=`ocamlc -where`

rm -f config.h config.sh
ulimit -c 0          # no coredumps

compiler="ocamlc -custom"
if ocamlopt; then compiler=ocamlopt; fi

log="config.log"
rm -f $log
touch $log

out="config.h"
rm -f $out
touch $out

mkdir -p testdir

######################################################################

# Programs linked with ocamlc have more libraries linked in by default.
# Because of this, we use ocamlopt if available.

call_ocamlc () {
    echo '$' $compiler -ccopt "$GNUTLS_CFLAGS" -cclib "$GNUTLS_LIBS" "$@" >>$log
    ( cd testdir;
      $compiler -ccopt "$GNUTLS_CFLAGS" -cclib "$GNUTLS_LIBS" "$@"
    )  >>$log 2>&1
    return $?
}


check_fun() {
    macro="$1"
    fun="$2"

}

######################################################################


printf "Checking for GnuTLS... "
fun=gnutls_global_init
echo "# FUN $fun" >> $log

cat <<EOF >testdir/main.ml
let () = ()
EOF

cat <<EOF >testdir/test.c
#include <gnutls/gnutls.h>
#include <gnutls/openpgp.h>
#include <gnutls/x509.h>
int main (int argc, char *argv[], char *envp[]) {
  (void) & $fun;
  return 0;
}
EOF

if call_ocamlc -o test test.c main.ml; then
    echo "found"
    have_gnutls=1    
else
    echo "not found"
    have_gnutls=0
fi


if [ $have_gnutls -gt 0 ]; then
    echo "PKG_CONFIG='$PKG_CONFIG'" >>config.sh
    echo "GNUTLS_CFLAGS='$GNUTLS_CFLAGS'" >>config.sh
    echo "GNUTLS_LIBS='$GNUTLS_LIBS'" >>config.sh

    ./reconfigure
fi
